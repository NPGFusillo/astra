
import os
from astra.tasks.io import ApStarFile as SDSS5ApStarFile
from astra.tasks.targets import LocalTarget
from astra.contrib.ferre.tasks.ferre import EstimateStellarParametersGivenApStarFileBase
from astra.contrib.ferre.tasks.aspcap import (
    EstimateStellarParametersGivenMedianFilteredApStarFileBase,
    InitialEstimateOfStellarParametersGivenApStarFileBase,
    IterativeEstimateOfStellarParametersGivenApStarFileBase
)
from astra.contrib.ferre.tasks.targets import FerreResult

class SDSS5Mixin:

    def output(self):
        """ The outputs generated by the task. """

        if self.is_batch_mode:
            return [task.output() for task in self.get_batch_tasks()]

        path = os.path.join(
            self.output_base_dir,
            f"star/{self.telescope}/{int(self.healpix)/1000:.0f}/{self.healpix}/",
            f"apStar-{self.apred}-{self.telescope}-{self.obj}-{self.task_id}.pkl"
        )
        os.makedirs(os.path.dirname(path), exist_ok=True)

        return {
            "database": FerreResult(self),
            "spectrum": LocalTarget(path)
        }



class EstimateStellarParametersGivenSDSS5ApStarFile(SDSS5Mixin, EstimateStellarParametersGivenApStarFileBase, SDSS5ApStarFile):

    """ Use FERRE to estimate stellar parameters given a SDSS-V ApStar file. """

    observation_task = SDSS5ApStarFile




class EstimateStellarParametersGivenMedianFilteredSDSS5ApStarFile(EstimateStellarParametersGivenMedianFilteredApStarFileBase, EstimateStellarParametersGivenSDSS5ApStarFile):
    
    def requires(self):
        """ The requirements of this task, which include the previous estimate. """
        requirements = super(EstimateStellarParametersGivenMedianFilteredSDSS5ApStarFile, self).requires()
        requirements.update(
            previous_estimate=EstimateStellarParametersGivenSDSS5ApStarFile(**self.get_common_param_kwargs(EstimateStellarParametersGivenSDSS5ApStarFile))
        )
        return requirements
        

    

class InitialEstimateOfStellarParametersGivenSDSS5ApStarFile(InitialEstimateOfStellarParametersGivenApStarFileBase, SDSS5ApStarFile):

    """
    A task that dispatches an ApStarFile to multiple FERRE grids, in a similar way done by ASPCAP in SDSS-IV.
    """

    task_factory = EstimateStellarParametersGivenSDSS5ApStarFile

    def output(self):
        if self.is_batch_mode:
            return [task.output() for task in self.get_batch_tasks()]
        
        path = os.path.join(
            self.output_base_dir,
            f"star/{self.telescope}/{int(self.healpix)/1000:.0f}/{self.healpix}/",
            f"apStar-{self.apred}-{self.telescope}-{self.obj}-{self.task_id}.pkl"
        )
        os.makedirs(os.path.dirname(path), exist_ok=True)
        return LocalTarget(path)



class IterativeEstimateOfStellarParametersGivenSDSS5ApStarFile(SDSS5Mixin, IterativeEstimateOfStellarParametersGivenApStarFileBase, SDSS5ApStarFile):

    task_factory = EstimateStellarParametersGivenMedianFilteredSDSS5ApStarFile

    def requires(self):
        """ This task requires the initial estimates of stellar parameters from many grids. """
        return InitialEstimateOfStellarParametersGivenSDSS5ApStarFile(
            **self.get_common_param_kwargs(InitialEstimateOfStellarParametersGivenSDSS5ApStarFile)
        )
