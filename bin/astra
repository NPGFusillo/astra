import click
import os
import logging

from astra.contrib.apogeenet.cli import apogeenet
from astra.contrib.classifier.cli import classifier
from astra.contrib.thepayne.cli import thepayne
from astra.contrib.doppler.cli import doppler

# Common options.
@click.group()
@click.option("-v", "verbose", default=False, is_flag=True,
              help="verbose mode")
@click.pass_context
def cli(context, verbose):
    context.ensure_object(dict)
    context.obj["verbose"] = verbose

    # TODO: Check this is propagated to:
    #       [ ] astra
    #       [ ] airflow
    #       [ ] sqlalchemy
    #logging.set_level(logging.DEBUG if verbose else logging.INFO)


# Add 'run' sub-commands.
@click.group()
@click.pass_context
def run(context):
    pass
    
# TODO: Figure out how to do lazy-loading of these things.
run.add_command(apogeenet)
run.add_command(classifier)
run.add_command(thepayne)
run.add_command(doppler)


cli.add_command(run)


if __name__ == "__main__":
    cli(obj=dict())
