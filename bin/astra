#!/usr/bin/env python
# encoding: utf-8

import click
import argparse
import os
from astra import log
from logging import DEBUG, INFO

from astra.tools.parsers import (component, folder, setup, subset, task, execute)



# Common options.
@click.group()
@click.option("-v", "verbose", default=False, is_flag=True,
              help="verbose mode")
@click.pass_context
def cli(context, verbose):
    context.ensure_object(dict)
    context.obj["verbose"] = verbose

    # TODO: This isn't correctly followed for sqlalchemy output. 
    # It defaults to verbose!
    log.set_level(DEBUG if verbose else INFO)


# Add various commands
cli.add_command(setup.parser, name="setup")
cli.add_command(folder.parser, name="folder")
cli.add_command(subset.parser, name="subset")
cli.add_command(component.parser, name="component")
cli.add_command(task.parser, name="task")
cli.add_command(execute.execute, name="execute")

# Query execute
# Execute
# Schedule

if __name__ == "__main__":
    cli(obj=dict())

"""

astra setup
astra folder watch [PATH]
astra folder unwatch [PATH]
astra subset create
astra subset delete
astra component add
astra component delete

astra run:

# Every minute check if we should check for new folders.
# With any new data, update subsets.
# With any new data, identify suitable components
# With any new data, create tasks for those components.
# Execute the tasks.

"""